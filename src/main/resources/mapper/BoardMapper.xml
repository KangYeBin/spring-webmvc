<!-- 이 파일이 mybatis의 mapper로 사용된다는 일종의 선언 -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace에는 이 파일과 연동될 인터페이스의 전체 경로(패키지명 포함 클래스명)를 적는다 -->
<mapper namespace="com.spring.mvc.chap05.mapper.BoardMapper">

    <!-- 구현하고자하는 인터페이스에 명세된 추상 메서드별로 SQL을 작성 -->
    <!-- id에는 추상 메서드 이름 -->
    <!-- SQL 작성시 값을 전달하는 방법은
        1. 추상 메서드를 보고 어떤 타입의 값이 전달되는지 확인
        2. 값이 만약 객체라면 객체 내부의 필드값을 꺼내기 위해 필드명을 지목
        3. 단일 값이라면 매개변수명으로 지목 -->
    <insert id="save">
        INSERT INTO tbl_board
            (title, content, writer)
        VALUES
            (#{title}, #{content}, #{writer})
    </insert>

    <delete id="delete">
        DELETE FROM
            tbl_board
        WHERE
            board_no = #{boardNo}
    </delete>

    <update id="updateViewCount">
        UPDATE
            tbl_board
        SET
            view_count = view_count + 1
        WHERE
            board_no = #{bno}
    </update>

    <!-- SELECT의 경우에는 반환되는 타입을 작성해줘야 한다.
        resultType을 통해 리턴되는 객체의 타입을 이야기해준다.
        데이터베이스의 컬러명과 엔티티의 필드명이 동일해야 한다-->

    <select id="findAll" resultType="board">
        SELECT
            *
        FROM
            tbl_board
        ORDER BY
            board_no DESC
    </select>

    <select id="findOne" resultType="board">
        SELECT * FROM tbl_board WHERE board_no = #{bno}
    </select>



</mapper>